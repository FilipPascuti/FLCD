%{
#include <stdio.h>
#include <string.h>
int lines = 0;
%}

%option noyywrap
%option caseless


ID          [a-zA-Z][a-zA-Z0-9_]*
ZERO        [0]
NUMBER      [+-]?[1-9][0-9]*|{ZERO}
STRING		\"[a-zA-Z0-9]*\"
CONST		{STRING}|{NUMBER}

%%

int         {printf("Reserved word: %s\n", yytext);}
string      {printf("Reserved word: %s\n", yytext);}
if          {printf("Reserved word: %s\n", yytext);}
else        {printf("Reserved word: %s\n", yytext);}
while       {printf("Reserved word: %s\n", yytext);}
readInt     {printf("Reserved word: %s\n", yytext);}
read        {printf("Reserved word: %s\n", yytext);}
print       {printf("Reserved word: %s\n", yytext);}

{ID}	{printf( "Identifier: %s\n", yytext );}

{CONST}	{printf( "Constant: %s\n", yytext );}


";"	    {printf( "Separator: %s\n", yytext );}
","	    {printf( "Separator: %s\n", yytext );}
"{"	    {printf( "Separator: %s\n", yytext );}
"}"	    {printf( "Separator: %s\n", yytext );}
"("	    {printf( "Separator: %s\n", yytext );}
")"	    {printf( "Separator: %s\n", yytext );}
"["	    {printf( "Separator: %s\n", yytext );}
"]"	    {printf( "Separator: %s\n", yytext );}

"+"	    {printf( "Operator: %s\n", yytext );}
"-"	    {printf( "Operator: %s\n", yytext );}
"*"	    {printf( "Operator: %s\n", yytext );}
"/"	    {printf( "Operator: %s\n", yytext );}
"%"	    {printf( "Operator: %s\n", yytext );}
"<"	    {printf( "Operator: %s\n", yytext );}
">"	    {printf( "Operator: %s\n", yytext );}
"<="	{printf( "Operator: %s\n", yytext );}
">="	{printf( "Operator: %s\n", yytext );}
"!="	{printf( "Operator: %s\n", yytext );}
"=="	{printf( "Operator: %s\n", yytext );}
"="     {printf( "Operator: %s\n", yytext );}
"&&"    {printf( "Operator: %s\n", yytext );}
"||"    {printf( "Operator: %s\n", yytext );}

[ \t]+  	{}
[\n]+ {lines++;}

%%

int main(int argc,char** argv)
{
if (argc > 1)
{
    FILE *file;
    file = fopen(argv[1], "r");
    if (!file)
    {
        fprintf(stderr, "Could not open %s\n", argv[1]);
        exit(1);
    }
    yyin = file;
}

yylex();
} 