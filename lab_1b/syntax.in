    number := non_zero_digit {digit}
    digit = "0"|non_zero_digit
    non_zero_digit = "1"|...|"9"

    program = statement_list

    statement_list = statement{statement} 

    statement = simple_statement | compount_statement

    simple_statement = (assignment_statement | declaration_statement | io_statement) ";" 

    compount_statement = if_statement | while_statement

    primitive_type = "int" | "char" | "string"

    list_type = primitive_type"["number"]"

    type = primitive_type | list_type

    constant = const_int | const_character | const_string

    aritmetic_operator =  "+" | "-" | "*" | "/" | "%" 

    relational_operator = "&&" | "||" | ">" | "<" | ">=" | "<=" | "==" | "!="

    expression = constant | identifier | identifier"["number"]"
                    | expression aritmetic_operator expression
                    | "("expression")"

    condition = expression relational_operator expression

    declaration_statement = type identifier ["=" expression]

    assignment_statement = identifier "=" expression

    io_statement = identifier ("= readInt()" | " = read()") | "print(" expression ")"

    if_statement = "if (" condition ")" "{" statement_list "}" [ "else {" statement_list "}" ] 

    while_statement = "while (" condition ") { " statement_list "}"






























